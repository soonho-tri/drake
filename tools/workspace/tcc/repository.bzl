# -*- mode: python -*-
# vi: set ft=python :

"""
Makes a system-installed tiny c compiler headers and library
available to be used as a C/C++ dependency. On Ubuntu, pkg-config is used to
locate the tcc headers and library. On macOS, no pkg-config tcc.pc file is
installed, but the tcc headers are included in the macOS SDK and the library
is always located at /usr/lib.

Example:
    WORKSPACE:
        load("@drake//tools/workspace/tcc:repository.bzl", "tcc_repository")
        tcc_repository(name = "foo")

    BUILD:
        cc_library(
            name = "foobar",
            deps = ["@foo//:tcc"],
            srcs = ["bar.cc"],
        )

Argument:
    name: A unique name for this rule.
"""

load("@drake//tools/workspace:execute.bzl", "execute_or_fail")
load("@drake//tools/skylark:pathutils.bzl", "join_paths")
load("@drake//tools/workspace:os.bzl", "determine_os")

def _impl(repository_ctx):
    os_result = determine_os(repository_ctx)
    if os_result.error != None:
        fail(os_result.error)

    if os_result.is_macos:
        include = "/usr/local/opt/tcc/include"
        linkopts = ["-L/usr/local/opt/tcc/lib", "-ltcc"]
    else:
        include = "/usr/include"
        linkopts = ["-ltcc", "-ldl"]
    repository_ctx.symlink(
        join_paths(include, "libtcc.h"),
        "include/libtcc.h",
    )
    file_content = """# -*- python -*-

# DO NOT EDIT: generated by tcc_repository()

licenses(["restricted"])  # LGPL 2.1

cc_library(
    name = "tcc",
    hdrs = [
      "include/libtcc.h",
    ],
    includes = ["include"],
    linkopts = {},
    visibility = ["//visibility:public"],
)
""".format(linkopts)

    repository_ctx.file(
        "BUILD.bazel",
        content = file_content,
        executable = False,
    )

tcc_repository = repository_rule(
    local = True,
    implementation = _impl,
)
